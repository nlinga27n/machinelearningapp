<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI & ML Concept Explorer for Beginners</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #0d1117; /* Dark background */
            color: #c9d1d9; /* Light text */
        }
        .concept-card {
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .concept-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .btn-primary {
            transition: background-color 0.2s, transform 0.1s;
        }
        .btn-primary:hover {
            background-color: #6366f1; /* Hover darker */
            transform: translateY(-1px);
        }
        .btn-primary:active {
            transform: translateY(0);
        }
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #6366f1;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
            display: inline-block;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="p-4 md:p-8">

    <div class="max-w-6xl mx-auto">
        <!-- Header -->
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-extrabold text-indigo-400 mb-2">
                AI & ML Explained for Everyone
            </h1>
            <p class="text-xl text-gray-400">
                A simple, interactive guide to how machines learn.
            </p>
        </header>

        <!-- Section 1: Core Concepts -->
        <section class="mb-16">
            <h2 class="text-3xl font-bold mb-6 border-b border-indigo-500/50 pb-2">1. The Big Picture</h2>
            <div id="concept-grid" class="grid grid-cols-1 md:grid-cols-3 gap-6">

                <!-- AI Card -->
                <div id="card-ai" class="concept-card bg-[#161b22] p-6 rounded-xl border border-indigo-600/50" onclick="toggleConcept('ai')">
                    <h3 class="text-2xl font-semibold text-indigo-300 flex items-center mb-2">
                        <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1v-3m-6.447-2.837A3.013 3.013 0 0012 15a3.013 3.013 0 005.447-2.837M15.75 8a3.75 3.75 0 10-7.5 0 3.75 3.75 0 007.5 0z"></path></svg>
                        Artificial Intelligence (AI)
                    </h3>
                    <p class="text-gray-400 text-sm">
                        <span id="ai-teaser">The Big Goal: Making machines smart enough to solve problems like a human. Click to learn more...</span>
                        <span id="ai-full" class="hidden text-base mt-2">
                            AI is the broad science of creating systems that can perform tasks that typically require human intelligence, such as visual perception, speech recognition, decision-making, and language translation. It's the whole field of making things "smart."
                        </span>
                    </p>
                </div>

                <!-- ML Card -->
                <div id="card-ml" class="concept-card bg-[#161b22] p-6 rounded-xl border border-indigo-600/50" onclick="toggleConcept('ml')">
                    <h3 class="text-2xl font-semibold text-indigo-300 flex items-center mb-2">
                        <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path></svg>
                        Machine Learning (ML)
                    </h3>
                    <p class="text-gray-400 text-sm">
                        <span id="ml-teaser">The Method: A machine learning a skill from examples (data), without being explicitly programmed. Click to learn more...</span>
                        <span id="ml-full" class="hidden text-base mt-2">
                            Machine Learning is a *subset* of AI where we give a computer lots of data and allow it to learn patterns and make decisions based on that data. Instead of writing rules like "IF X THEN Y," we let the machine figure out the rules itself.
                        </span>
                    </p>
                </div>

                <!-- DL Card -->
                <div id="card-dl" class="concept-card bg-[#161b22] p-6 rounded-xl border border-indigo-600/50" onclick="toggleConcept('dl')">
                    <h3 class="text-2xl font-semibold text-indigo-300 flex items-center mb-2">
                        <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm-3-4a6 6 0 00-6-6h-2a6 6 0 00-6 6v1h14v-1zm12-7a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
                        Deep Learning (DL)
                    </h3>
                    <p class="text-gray-400 text-sm">
                        <span id="dl-teaser">The Tool: An advanced type of ML that uses large virtual "neural networks" to handle very complex tasks. Click to learn more...</span>
                        <span id="dl-full" class="hidden text-base mt-2">
                            Deep Learning is a *subset* of Machine Learning that uses very large networks (modeled loosely after the human brain) to process complex data like images, audio, and text. It's what powers modern breakthroughs like ChatGPT and advanced self-driving cars.
                        </span>
                    </p>
                </div>

            </div>
        </section>

        <!-- Section 2: Interactive ML Training Demo -->
        <section>
            <h2 class="text-3xl font-bold mb-6 border-b border-indigo-500/50 pb-2">2. Learn by Doing: The Simple Classifier</h2>
            <div class="bg-[#161b22] p-8 rounded-xl border border-indigo-600/50">
                <p class="text-lg mb-4 text-center text-gray-300">
                    Help our simple machine learn to classify "Shapes" vs. "Colors" by giving it examples (data).
                </p>

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">

                    <!-- Training Panel -->
                    <div class="p-4 rounded-lg bg-gray-800/50">
                        <h3 class="text-xl font-semibold text-center text-indigo-300 mb-4">Phase 1: Training the Model</h3>
                        <p class="text-sm mb-4 text-gray-400">
                            Click the buttons below. Each click adds a data point to train the machine. You need at least 5 points to "Train."
                        </p>

                        <div class="flex justify-center space-x-4 mb-6">
                            <button id="train-shape-btn" class="btn-primary bg-indigo-500 text-white font-bold py-3 px-6 rounded-full shadow-lg" onclick="addData('shape')">
                                Data Point: Shape (e.g., Circle)
                            </button>
                            <button id="train-color-btn" class="btn-primary bg-purple-500 text-white font-bold py-3 px-6 rounded-full shadow-lg" onclick="addData('color')">
                                Data Point: Color (e.g., Blue)
                            </button>
                        </div>

                        <div id="training-status" class="text-center p-3 bg-gray-700 rounded-lg">
                            Training Data Collected: <span id="data-count" class="font-bold text-indigo-400">0</span>
                        </div>
                        <div id="data-log" class="mt-4 max-h-40 overflow-y-auto p-2 bg-gray-900 rounded-lg text-sm text-gray-500">
                            <!-- Data points will appear here -->
                        </div>
                    </div>

                    <!-- Prediction Panel -->
                    <div class="p-4 rounded-lg bg-gray-800/50">
                        <h3 class="text-xl font-semibold text-center text-indigo-300 mb-4">Phase 2: Making a Prediction</h3>

                        <div id="prediction-area" class="text-center">
                            <button id="predict-btn" class="btn-primary bg-green-500 text-white font-bold py-3 px-6 rounded-full shadow-lg disabled:opacity-50" onclick="predict()" disabled>
                                Try to Predict!
                            </button>

                            <div id="prediction-result" class="mt-4 p-4 bg-gray-900 rounded-lg hidden">
                                <p class="text-xl font-semibold text-indigo-400 mb-2">Machine's Prediction:</p>
                                <p id="result-text" class="text-2xl font-bold"></p>
                                <p id="result-explanation" class="text-sm text-gray-400 mt-2"></p>
                            </div>

                            <div id="training-needed" class="mt-4 p-4 bg-yellow-900/50 border border-yellow-700 rounded-lg">
                                <p class="text-lg font-medium text-yellow-300">
                                    Needs more data! Click above to collect at least 5 data points before predicting.
                                </p>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </section>

        <!-- Footer -->
        <footer class="mt-16 pt-8 border-t border-gray-700 text-center text-sm text-gray-500">
            <p>&copy; 2024 ML Explorer Demo. Simple concepts for complex ideas.</p>
        </footer>
    </div>

    <script>
        // --- Core Concepts Script ---

        const concepts = ['ai', 'ml', 'dl'];

        function toggleConcept(id) {
            const fullText = document.getElementById(`${id}-full`);
            const teaserText = document.getElementById(`${id}-teaser`);
            const card = document.getElementById(`card-${id}`);

            concepts.forEach(c => {
                if (c !== id) {
                    // Reset other cards
                    document.getElementById(`${c}-full`).classList.add('hidden');
                    document.getElementById(`${c}-teaser`).classList.remove('hidden');
                    document.getElementById(`card-${c}`).classList.remove('bg-indigo-900/50', 'border-indigo-400');
                    document.getElementById(`card-${c}`).classList.add('bg-[#161b22]', 'border-indigo-600/50');
                }
            });

            // Toggle current card
            const isHidden = fullText.classList.contains('hidden');
            if (isHidden) {
                fullText.classList.remove('hidden');
                teaserText.classList.add('hidden');
                card.classList.add('bg-indigo-900/50', 'border-indigo-400');
                card.classList.remove('bg-[#161b22]', 'border-indigo-600/50');
            } else {
                fullText.classList.add('hidden');
                teaserText.classList.remove('hidden');
                card.classList.remove('bg-indigo-900/50', 'border-indigo-400');
                card.classList.add('bg-[#161b22]', 'border-indigo-600/50');
            }
        }


        // --- ML Training Demo Script ---

        let dataPoints = [];
        const MIN_TRAINING_DATA = 5;

        const dataCountEl = document.getElementById('data-count');
        const predictBtn = document.getElementById('predict-btn');
        const trainingNeededEl = document.getElementById('training-needed');
        const predictionResultEl = document.getElementById('prediction-result');
        const dataLogEl = document.getElementById('data-log');

        /**
         * Adds a data point (either 'shape' or 'color') to the training set.
         * @param {string} type - 'shape' or 'color'
         */
        function addData(type) {
            dataPoints.push(type);
            dataCountEl.textContent = dataPoints.length;
            
            // Log the new data point
            const newItem = document.createElement('div');
            newItem.className = 'py-1 border-b border-gray-800 last:border-b-0';
            newItem.textContent = `[${dataPoints.length}] Added: ${type.charAt(0).toUpperCase() + type.slice(1)}`;
            dataLogEl.prepend(newItem); // Add new item to the top of the log

            // Enable prediction button if threshold is met
            if (dataPoints.length >= MIN_TRAINING_DATA) {
                predictBtn.disabled = false;
                predictionResultEl.classList.add('hidden'); // Hide old results when new data is added
                trainingNeededEl.classList.add('hidden');
            } else {
                // Hide previous prediction results if training continues
                predictionResultEl.classList.add('hidden');
                predictBtn.disabled = true;
                trainingNeededEl.classList.remove('hidden');
            }
        }

        /**
         * Simulates the prediction phase based on the collected training data.
         */
        async function predict() {
            if (dataPoints.length < MIN_TRAINING_DATA) {
                return;
            }

            // Show loading state
            predictBtn.innerHTML = '<span class="loader"></span> Analyzing...';
            predictBtn.disabled = true;

            // Simulate a short processing time
            await new Promise(resolve => setTimeout(resolve, 1500));

            // 1. Machine Learning Logic (Simple Majority Classifier)
            const shapeCount = dataPoints.filter(d => d === 'shape').length;
            const colorCount = dataPoints.filter(d => d === 'color').length;

            const total = dataPoints.length;
            const shapeRatio = (shapeCount / total) * 100;
            const colorRatio = (colorCount / total) * 100;

            let prediction = '';
            let explanation = '';

            if (shapeCount > colorCount) {
                prediction = 'Shape';
                explanation = `The machine saw more examples of 'Shape' (${shapeRatio.toFixed(0)}%), so it guesses the new data is also a Shape. This is similar to a human guessing based on the most common thing they've seen.`;
            } else if (colorCount > shapeCount) {
                prediction = 'Color';
                explanation = `The machine saw more examples of 'Color' (${colorRatio.toFixed(0)}%), so it guesses the new data is also a Color. This is how simple machine learning finds the most likely answer.`;
            } else {
                prediction = 'Uncertain';
                explanation = `The machine saw an equal number of both examples, so it can't make a confident prediction. Try adding more data to give it a clearer pattern!`;
            }

            // 2. Display Result
            document.getElementById('result-text').textContent = prediction;
            document.getElementById('result-explanation').textContent = explanation;

            predictionResultEl.classList.remove('hidden');

            // 3. Reset Button
            predictBtn.innerHTML = 'Try to Predict!';
            predictBtn.disabled = false; 

        }
    </script>
</body>
</html>
